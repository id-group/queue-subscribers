plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.1.2'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

idea {
    project {
        languageLevel = 17
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}


java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

allprojects {
    group "ru.idgroup.queue"
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    apply plugin: "io.spring.dependency-management"
    dependencyManagement {
        dependencies {
            imports {
                mavenBom("org.springframework.boot:spring-boot-dependencies:3.1.2")
                mavenBom("org.testcontainers:testcontainers-bom:1.17.2")
            }
        }
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
        resolutionStrategy {
            force("commons-logging:commons-logging:1.1.1")
            force("commons-lang:commons-lang:2.5")
            force("org.codehaus.jackson:jackson-core-asl:1.8.8")
            force("org.codehaus.jackson:jackson-mapper-asl:1.8.3")
            force("org.codehaus.jettison:jettison:1.1")
            force("net.java.dev.jna:jna:5.8.0")
            force("com.google.errorprone:error_prone_annotations:2.11.0")
        }
    }
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.with {
        encoding = 'UTF-8'
    }
}



